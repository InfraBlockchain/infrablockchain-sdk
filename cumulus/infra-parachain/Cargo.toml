[package]
name = "infra-parachain-bin"
version = "1.1.0"
authors.workspace = true
build = "build.rs"
edition.workspace = true
description = "Runs a infra-relay parachain node which could be a collator."

[[bin]]
name = "infra-parachain"
path = "src/main.rs"

[dependencies]
async-trait = "0.1.73"
clap = { version = "4.4.6", features = ["derive"] }
codec = { package = "parity-scale-codec", version = "3.0.0" }
futures = "0.3.28"
hex-literal = "0.4.1"
log = "0.4.20"
serde = { version = "1.0.188", features = ["derive"] }
serde_json = "1.0.107"

# Local
jsonrpsee = { version = "0.16.2", features = ["server"] }
parachains-common = { path = "../parachains/common" }

# parachains's runtimes
asset-hub-runtime = { path = "../parachains/runtimes/assets/asset-hub-infra" }
newnal-runtime = { path = "../parachains/runtimes/ur-auth" }
contracts-infra-runtime = { path = "../parachains/runtimes/contracts/contracts-infra" }
did-runtime = { path = "../parachains/runtimes/did" }

# Substrate
frame-benchmarking = { path = "../../substrate/frame/benchmarking" }
frame-benchmarking-cli = { path = "../../substrate/utils/frame/benchmarking-cli" }
sp-runtime = { path = "../../substrate/primitives/runtime", default-features = false }
sp-io = { path = "../../substrate/primitives/io" }
sp-core = { path = "../../substrate/primitives/core" }
sp-session = { path = "../../substrate/primitives/session" }
sc-consensus = { path = "../../substrate/client/consensus/common" }
sc-cli = { path = "../../substrate/client/cli" }
sc-client-api = { path = "../../substrate/client/api" }
sc-executor = { path = "../../substrate/client/executor" }
sc-service = { path = "../../substrate/client/service" }
sc-telemetry = { path = "../../substrate/client/telemetry" }
sc-transaction-pool = { path = "../../substrate/client/transaction-pool" }
sp-transaction-pool = { path = "../../substrate/primitives/transaction-pool" }
sc-network = { path = "../../substrate/client/network" }
sc-network-sync = { path = "../../substrate/client/network/sync" }
sc-basic-authorship = { path = "../../substrate/client/basic-authorship" }
sp-timestamp = { path = "../../substrate/primitives/timestamp" }
sp-blockchain = { path = "../../substrate/primitives/blockchain" }
sp-block-builder = { path = "../../substrate/primitives/block-builder" }
sp-keystore = { path = "../../substrate/primitives/keystore" }
sc-chain-spec = { path = "../../substrate/client/chain-spec" }
sc-rpc = { path = "../../substrate/client/rpc" }
sc-tracing = { path = "../../substrate/client/tracing" }
sp-offchain = { path = "../../substrate/primitives/offchain" }
sp-api = { path = "../../substrate/primitives/api" }
sp-consensus-aura = { path = "../../substrate/primitives/consensus/aura" }
sc-sysinfo = { path = "../../substrate/client/sysinfo" }
substrate-prometheus-endpoint = { path = "../../substrate/utils/prometheus" }
sc-transaction-pool-api = { path = "../../substrate/client/transaction-pool/api" }
frame-rpc-system = { package = "substrate-frame-rpc-system", path = "../../substrate/utils/frame/rpc/system" }
pallet-transaction-payment-rpc = { path = "../../substrate/frame/transaction-payment/rpc" }
substrate-state-trie-migration-rpc = { path = "../../substrate/utils/frame/rpc/state-trie-migration-rpc" }

# Infr Relay
infrablockchain-cli = { path = "../../infrablockchain/cli", features = [
	"rococo-native",
	"infra-relay-native",
] }
primitives = { path = "../../infrablockchain/primitives" }
infrablockchain-service = { path = "../../infrablockchain/node/service" }
xcm = { package = "staging-xcm", path = "../../infrablockchain/xcm" }

# Cumulus
cumulus-client-cli = { path = "../client/cli" }
cumulus-client-collator = { path = "../client/collator" }
cumulus-client-consensus-aura = { path = "../client/consensus/aura" }
cumulus-client-consensus-relay-chain = { path = "../client/consensus/relay-chain" }
cumulus-client-consensus-common = { path = "../client/consensus/common" }
cumulus-client-consensus-proposer = { path = "../client/consensus/proposer" }
cumulus-client-service = { path = "../client/service" }
cumulus-primitives-aura = { path = "../primitives/aura" }
cumulus-primitives-core = { path = "../primitives/core" }
cumulus-primitives-parachain-inherent = { path = "../primitives/parachain-inherent" }
cumulus-relay-chain-interface = { path = "../client/relay-chain-interface" }
color-print = "0.3.4"

[build-dependencies]
substrate-build-script-utils = { path = "../../substrate/utils/build-script-utils" }

[dev-dependencies]
assert_cmd = "2.0"
nix = { version = "0.26.1", features = ["signal"] }
tempfile = "3.8.0"
tokio = { version = "1.32.0", features = ["macros", "time", "parking_lot"] }
wait-timeout = "0.2"

[features]
default = []
runtime-benchmarks = [
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"parachains-common/runtime-benchmarks",
	"infrablockchain-cli/runtime-benchmarks",
	"primitives/runtime-benchmarks",
	"infrablockchain-service/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
try-runtime = [
	"infrablockchain-cli/try-runtime",
	"infrablockchain-service/try-runtime",
	"sp-runtime/try-runtime",
]
